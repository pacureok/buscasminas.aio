# ... (tu código HTML, CSS, JS, esp, ING, net, lua existentes) ...

<np>
(pat)
# Definición de estados del juego
$state "Game_Initializing",
$state "Playing_Game",
$state "Player_Won",
$state "Player_Lost",

# Tarea de inicio del juego
$task "Start_New_Game",
    # Llamamos a una función JavaScript para resetear el tablero
    run_logic_from_esp { $creafuntion "resetear_tablero_js" &intert (<tp>crearTablero();</tp>), },
    set_game_state "Playing_Game",
    log_message "Juego iniciado. ¡Buena suerte!", # Comando de logging
    play_sound "game_start.wav",

# Eventos y transiciones de estado
@on_event "celda_bomba_revelada",
    transition_to_state "Player_Lost",
    log_message "¡Bomba! Juego terminado.",
    play_sound "explosion_sound.mp3",
    # Podríamos activar una función de JS para mostrar el Game Over screen
    run_logic_from_esp { $creafuntion "mostrar_pantalla_gameover" &intert (<tp>statusMessage.textContent = '¡Game Over! ❌🚫';</tp>), },

@on_event "todas_celdas_seguras_reveladas",
    transition_to_state "Player_Won",
    log_message "¡Felicidades! Has ganado.",
    play_sound "victory_tune.mp3",
    run_logic_from_esp { $creafuntion "mostrar_pantalla_victoria" &intert (<tp>statusMessage.textContent = '¡Victoria! 🎉';</tp>), },

# Ejemplo de un patrón de secuencia de animación
$define_pattern "Explosion_Sequence",
    play_animation "explosion_frame_1",
    wait_time (seconds=0.1),
    play_animation "explosion_frame_2",
    wait_time (seconds=0.1),
    play_animation "explosion_frame_3",
    # ...
    end_pattern,
(/pat)
